name: Staging Deployment

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  stack:
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::534468236225:role/GitHubActionsSSTServiceAccount
      - name: Branch Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Deploy Stack
        run: |
          npx sst deploy --stage staging
  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [ stack ]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::534468236225:role/GitHubActionGeneralApplicationServiceAccount
          role-session-name: CdktfDeploy
      - name: Branch Checkout
        uses: actions/checkout@v3
      - name: CodeArtifact Login
        id: code-artifact-login
        run: |
          aws codeartifact login --tool pip --repository pypi --domain fgi --domain-owner 534468236225 --region ap-southeast-1
          echo "pypi-mirror=$(pip3 config get global.index-url)" >> $GITHUB_OUTPUT
      - name: Amazon ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and Push
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sample-gab-be
          IMAGE_TAG: ${{ github.sha }}
        with:
          context: .
          file: ./sample-gab-be.dockerfile
          push: true
          build-args: |
            "PIPENV_PYPI_MIRROR=${{ steps.code-artifact-login.outputs.pypi-mirror }}"
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:staging
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          provenance: false